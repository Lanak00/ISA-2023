// <auto-generated />
using System;
using MedicalEquipmentSupplySystem.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MedicalEquipmentSupplySystem.DataAccess.Migrations
{
    [DbContext(typeof(MedicalEquipmentSupplySystemDbContext))]
    [Migration("20231101075515_InitialMigration")]
    partial class InitialMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.Equipment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("EquipmentReservationId")
                        .HasColumnType("char(36)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("SupplyCompanyId")
                        .HasColumnType("char(36)");

                    b.Property<int>("SupplyCompanyId1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplyCompanyId1");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.EquipmentReservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<Guid>("EquipmentId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("HospitalWorkerId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("SystemAdministratorId")
                        .HasColumnType("char(36)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentId")
                        .IsUnique();

                    b.HasIndex("HospitalWorkerId");

                    b.HasIndex("SystemAdministratorId");

                    b.ToTable("EquipmentReservation");
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.SupplyCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Image")
                        .IsRequired()
                        .HasColumnType("longblob");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<float>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("SupplyCompanies");
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    MySqlPropertyBuilderExtensions.HasCharSet(b.Property<string>("Address"), "utf8mb4");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.CompanyAdministrator", b =>
                {
                    b.HasBaseType("MedicalEquipmentSupplySystem.DataAccess.Model.User");

                    b.ToTable("CompanyAdministrators", (string)null);
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.HospitalWorker", b =>
                {
                    b.HasBaseType("MedicalEquipmentSupplySystem.DataAccess.Model.User");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Penalties")
                        .HasColumnType("int");

                    b.ToTable("HospitalWorkers", (string)null);
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.SystemAdministrator", b =>
                {
                    b.HasBaseType("MedicalEquipmentSupplySystem.DataAccess.Model.User");

                    b.ToTable("SystemAdministrators", (string)null);
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.Equipment", b =>
                {
                    b.HasOne("MedicalEquipmentSupplySystem.DataAccess.Model.SupplyCompany", "SupplyCompany")
                        .WithMany("EquipmentList")
                        .HasForeignKey("SupplyCompanyId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SupplyCompany");
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.EquipmentReservation", b =>
                {
                    b.HasOne("MedicalEquipmentSupplySystem.DataAccess.Model.Equipment", "Equipment")
                        .WithOne("EquipmentReservation")
                        .HasForeignKey("MedicalEquipmentSupplySystem.DataAccess.Model.EquipmentReservation", "EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalEquipmentSupplySystem.DataAccess.Model.HospitalWorker", "HospitalWorker")
                        .WithMany("EquipmentReservationList")
                        .HasForeignKey("HospitalWorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MedicalEquipmentSupplySystem.DataAccess.Model.SystemAdministrator", "SystemAdministrator")
                        .WithMany()
                        .HasForeignKey("SystemAdministratorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("HospitalWorker");

                    b.Navigation("SystemAdministrator");
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.CompanyAdministrator", b =>
                {
                    b.HasOne("MedicalEquipmentSupplySystem.DataAccess.Model.User", null)
                        .WithOne()
                        .HasForeignKey("MedicalEquipmentSupplySystem.DataAccess.Model.CompanyAdministrator", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.HospitalWorker", b =>
                {
                    b.HasOne("MedicalEquipmentSupplySystem.DataAccess.Model.User", null)
                        .WithOne()
                        .HasForeignKey("MedicalEquipmentSupplySystem.DataAccess.Model.HospitalWorker", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.SystemAdministrator", b =>
                {
                    b.HasOne("MedicalEquipmentSupplySystem.DataAccess.Model.User", null)
                        .WithOne()
                        .HasForeignKey("MedicalEquipmentSupplySystem.DataAccess.Model.SystemAdministrator", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.Equipment", b =>
                {
                    b.Navigation("EquipmentReservation")
                        .IsRequired();
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.SupplyCompany", b =>
                {
                    b.Navigation("EquipmentList");
                });

            modelBuilder.Entity("MedicalEquipmentSupplySystem.DataAccess.Model.HospitalWorker", b =>
                {
                    b.Navigation("EquipmentReservationList");
                });
#pragma warning restore 612, 618
        }
    }
}
